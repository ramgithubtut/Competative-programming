class Solution:
    def buildTree(self, preorder: List[int], inorder: List[int]) -> Optional[TreeNode]:
        if not preorder and not inorder:
            return None
        root=TreeNode()
        root.val=preorder[0]
        mid=inorder.index(root.val)
        root.left=self.buildTree(preorder[1:mid+1],inorder[0:mid])
        root.right=self.buildTree(preorder[mid+1:],inorder[mid+1:])
        return root